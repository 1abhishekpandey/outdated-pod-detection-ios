name: Check Outdated Pod Copy

on:
  schedule:
    - cron:  '0 5 * * *'
  workflow_dispatch:

jobs:
  outdatedPods:
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write' #__This fixed the HttpError: Resource not accessible by integration
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install pods
        run: |
          cd example
          rm podfile.lock
          pod install
      - name: Check outdated pods
        uses: yatatsu/pod-outdated-check-action@v0.3.0
        id: outdated
        with:
          project_directory: Example
          podspec: Rudder-Amplitude.podspec
          exclude_pods: Rudder
      - name: Print outdated pods
        if: steps.outdated.outputs.has_any_outdated != 'false'
        run: |
          echo "Successfull"
          echo "${{ steps.outdated.outputs.outdated_pod_info }}"
      # - name: Create an issue if outdated pods are detected 
      #   if: steps.outdated.outputs.has_any_outdated != 'false'
      #   uses: JasonEtco/create-an-issue@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     DESCRIPTION: ${{ steps.outdated.outputs.outdated_pod_info }}
      #     OUTDATED_SDK_NAME: Amplitude
      #   with:
      #     filename: .github/outdated-pod-template.md
      #     update_existing: true
      - name: Github Issue through comnmand
        if: steps.outdated.outputs.has_any_outdated != 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh issue create -a "1abhishekpandey" -b "${{ steps.outdated.outputs.outdated_pod_info }}" -t "fix: update {{ env.OUTDATED_SDK_NAME }} SDK to the latest version"