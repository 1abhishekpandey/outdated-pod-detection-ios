name: Check Outdated Pod Copy

on:
  schedule:
    - cron:  '0 5 * * *'
  workflow_dispatch:

jobs:
  outdatedPods:
    # permissions:
    #   contents: 'read'
    #   id-token: 'write'
    #   issues: 'write' #__This fixed the HttpError: Resource not accessible by integration
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install pods
        run: |
          cd example
          rm podfile.lock
          pod install
      - name: Check outdated pods
        uses: yatatsu/pod-outdated-check-action@v0.3.0
        id: outdated
        with:
          project_directory: Example
          podspec: Rudder-Amplitude.podspec
          exclude_pods: Rudder
      - name: Set title, body and label
        env:
          TITLE: "fix: update Amplitude SDK to the latest version"
          BODY: "${{steps.outdated.outputs.outdated_pod_info}}"
          LABELS: "outdatedPods"
        run: |
          echo "${{env.TITLE}}"
          echo "${{env.BODY}}"
          echo "${{env.LABELS}}"
      - name: Print outdated pods
        if: steps.outdated.outputs.has_any_outdated != 'false'
        run: |
          echo "Successfull"
          echo "${{ env.BODY }}"

      # # - name: Create an issue if outdated pods are detected 
      # #   if: steps.outdated.outputs.has_any_outdated != 'false'
      # #   uses: JasonEtco/create-an-issue@v2
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # #     DESCRIPTION: ${{ steps.outdated.outputs.outdated_pod_info }}
      # #     OUTDATED_SDK_NAME: Amplitude
      # #   with:
      # #     filename: .github/outdated-pod-template.md
      # #     update_existing: true

      - name: Check if issue exist or not
        if: env.BODY != 'false'
        id: issue
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "number=$(gh issue list --search "${{ env.TITLE }}" --json number | jq '.[].number')" >> $GITHUB_ENV
      - name: Create new issue
        if: env.number == ''
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
          gh issue create -a "1abhishekpandey" -b "$env.BODY" -t "$env.TITLE" --label "$env.LABELS"
      - name: Edit existing issue
        if: env.number != ''
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
          gh issue edit ${{ env.number }} --body "${{ env.BODY }}"